name: Docker CI with Automated Tags (Local Build)

on:
  push:
    branches: [ "main", "01_DockerTest" ] 
  pull_request:
    branches: [ "main" ] 

jobs:
  build-and-run-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Tag Docker image
      uses: docker/build-push-action@v5
      with:
        context: . 
        push: false 
        tags: | 
          hello-world-nginx:v1
          hello-world-nginx:${{ github.sha }} # Tag with the full Git commit SHA (e.g., hello-world-nginx:abcdef12345)
          hello-world-nginx:${{ github.ref_name }} # Tag with the branch name (e.g., hello-world-nginx:main or hello-world-nginx:01_DockerTest)
          hello-world-nginx:latest # A common tag for the latest version of your application (usually applied on 'main')

    - name: Run Docker container
      run: docker run -d -p 8080:80 --name my-nginx-container hello-world-nginx:v1
      

    - name: Verify Nginx is running (Optional - for small demonstration)
      run: |
        sleep 5 # give Nginx a moment to start and be ready
        curl http://localhost:8080 # attempt to access Nginx on the mapped port
      shell: bash
      # if nginx is serving, u will see the content of your index.html in the logs

    - name: Clean up Docker container (Optional - good practice)
      if: always() # Ensures this step runs even if previous steps fail, cleaning up resources
      run: docker rm -f my-nginx-container # forcefully removes the temporary container
